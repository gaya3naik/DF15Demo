<apex:page sidebar="false" controller="SFController" >
    <apex:form >
        <select onChange="prepareAndSendRequest(this.value)" >
            <option value="MM">Measure VS Measure</option>
            <option value="MA">Growth Metrics</option>
            <option value="MD">Multi Dimension Analytics</option>
        </select>
    </apex:form>
    <div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div> <br/>
    <div id="container1" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <style>

        .hashtag{
        color: #F20930;
        }

        .tweetBlock{
        font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
        font-size: 12pt;
        border: 1px;
        border-style: solid;
        border-color: #E1E8Ed;
        background: #F5F8Fa;
        padding-right : 15px;
        }

        .tweetDate{
        font-size: 10pt;
        }

        #logger{
        font-size: 12pt;
        color: #F20930;
        }

    </style>

    <script language="JavaScript">
    var analyticsData = [];
    var appName ="trend-analyzer";
    function prepareAndSendRequest(type){
        var requestObj = {};
        requestObj.url = "https://na17.force.com/services/data/v20.0/query";
        requestObj.analysisType = (type==null)?"MM":type;
        requestObj.sessionId = "{!$Api.Session_ID}";
        fetchAnalyticsData(requestObj);

    }

    function sortByDate(a, b){
  var aDate = a.Date__c
  var bDate = b.Date__c;
  return ((aDate < bDate) ? -1 : ((aDate > bDate) ? 1 : 0));
}



    function fetchAnalyticsData(requestObj){
        j$( "#container" ).empty();
        j$( "#logger" ).show();
        j$( "#logger" ).text( "Loading data...");
        initChart();

        j$.ajax({
            method: "POST",
            url:"https://"+appName+".herokuapp.com/trends/analysis",
            data:JSON.stringify(requestObj),
            context: document.body,
            dataType: "json",
            headers:{'Content-type':'application/json'}
        }).done(function(data) {
            analyticsData = data;
            analyticsData.sort(sortByDate);
            if(requestObj.analysisType == 'MM'){
            	initChart();
            } else if(requestObj.analysisType == 'MA'){
                initChart1();
            }
            j$( "#logger" ).hide();
        });
        //analyticsData = [{"attributes":{"type":"AnalyticsData__c","url":"/services/data/v20.0/sobjects/AnalyticsData__c/a1To00000016cnNEAQ"},"Id":"a1To00000016cnNEAQ","PageViews__c":87.0,"SessionCount__c":49.0,"Date__c":"2015-08-07"},{"attributes":{"type":"AnalyticsData__c","url":"/services/data/v20.0/sobjects/AnalyticsData__c/a1To00000016cnDEAQ"},"Id":"a1To00000016cnDEAQ","PageViews__c":23.0,"SessionCount__c":58.0,"Date__c":"2015-08-11"}];
        //initChart();
    }


    function initChart() {
        j$( "#container1" ).hide();
        j$( "#container" ).show();
        chart = new Highcharts.Chart({
        chart: {
                            renderTo : 'container',
            type: 'spline'
                        },
        title: {
            text: 'Page Views Vs. Session Count',
            x: -20 //center
        },
        xAxis: {
            type: 'datetime',
            dateTimeLabelFormats: { // don't display the dummy year
                month: '%b %Y'
            },
            title: {
                text: 'Date'
            }
        },
        yAxis: {
            title: {
                text: 'Page Views/Session Count'
            },
            plotLines: [{
                value: 0,
                width: 1,
                color: '#808080'
            }]
        },
            plotOptions: {
            spline: {
                marker: {
                    enabled: true
                }
            }
        },
        legend: {
            layout: 'vertical',
            align: 'right',
            verticalAlign: 'middle',
            borderWidth: 0
        },
        series: [{
            name: 'Page Views',
            data: getPageViews(analyticsData)
        }, {
            name: 'Session Count',
            data:getSessionCount(analyticsData)
        }]
    });

    }

    function initChart1() {
         j$( "#container" ).hide();
        j$( "#container1" ).show();
        chart = new Highcharts.Chart({
        chart: {
                            renderTo : 'container1',
            type:'area'
                        },

        title: {
            text: '% Growth of Page Views/Session Count'
        },
        xAxis: {
            type: 'datetime',
            dateTimeLabelFormats: { // don't display the dummy year
                month: '%b %Y'
            },
            title: {
                text: 'Date'
            }
        },

        yAxis: {
            title: {
                text: '% Growth of Page Views/Session Count'
            }
        },
            plotOptions: {
            area: {
                lineColor: '#ffffff',
                lineWidth: 1,
                marker: {
                    lineWidth: 1,
                    lineColor: '#ffffff'
                }
            }
        },
        series: [{
            name: '% Growth of Page Views',
            data: getPageViews(analyticsData)
        },
                {
            name: '% Growth of Session Count',
            data: getSessionCount(analyticsData)
        }]
    });


    }


function getPageViews(data){
    var dates = getCategories(data);
    var returnValue = new Array();
    for(var i=0;i<data.length;i++){
        returnValue.push([dates[i],data[i].PageViews__c]);
    }
    return returnValue;
}
function getSessionCount(data){
    var dates = getCategories(data);
    var returnValue = new Array();
    for(var i=0;i<data.length;i++){
        returnValue.push([dates[i],data[i].SessionCount__c]);
    }
    return returnValue;
}
function getCategories(data){
     var returnValue = new Array();
    for(var i=0;i<data.length;i++){
        var x = new Date(data[i].Date__c);
        returnValue.push(Date.UTC(x.getUTCFullYear(), x.getUTCMonth(), x.getUTCDate()));
    }
    return returnValue;
}

    function populateTweetList(){
        for(var i = 0; i < tweetData.length; i++){
            document.getElementById("tweetList").innerHTML += getHTMLForTweet(tweetData[i]);
        }
    }

    function getHTMLForTweet(tweet){
        var html ="<table width='80%' class='tweetBlock'><tr><td width='75px'><img src='https://pbs.twimg.com/profile_images/468343244804198401/MKTZ6B9f_bigger.jpeg'/></td><td><table border='0'>";
        html += "<tr><th align='left'><a class='hashtag' href='https://www.twitter.com/@"+tweet.handle+"' target='blank'>@" + tweet.handle + "</a></th></tr>";
        html += "<tr><td class='tweetDate'>" + new Date(tweet.date).toUTCString() + "</td></tr>";
        html += "<tr><td>" + tweet.message.replace(/(^|\W)(#[a-z\d][\w-]*)/ig, '$1<span><a class="hashtag" href="https://www.twitter.com/$2" target="blank">$2</a></span>') + "</td></tr>";
        html += "</table></tr></td></table><br/>";
        return html;
    }

    j$ = jQuery.noConflict();
    j$( document ).ajaxError(function() {
        j$( "#logger" ).show();
        j$( "#logger" ).text( "Error in reading data" );
        j$( "#container" ).empty();
    });

    prepareAndSendRequest("MM");

    </script>

</apex:page>