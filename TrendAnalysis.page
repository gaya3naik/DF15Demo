<apex:page sidebar="false" controller="SFController" >
    <apex:form >
        <select onChange="prepareAndSendRequest(this.value)" >
            <option value="MM">Measure VS Measure</option>
            <option value="MA">Growth Metrics</option>
            <option value="AT">Multi Dimension Analytics</option>
        </select>
    </apex:form>
    <div id="containerBlock">
        <table width="100%">
            <tr>
                <td>
                    <div id="table" style="display: flex; align: center; padding-top: 20px">
                    </div>
                </td>
                <td width="70%">
                    <div id="container" style="min-width: 310px; height: 400px; margin: 0 auto">
                    </div>
                </td>
            </tr>
        </table>
    </div> <br/>
    <div id="containerBlock1">
        <table width="100%">
            <tr>
                <td>
                    <div id="table1" style="display: flex; align: center; padding-top: 20px">
                    </div>
                </td>
                <td width="70%">
                    <div id="container1" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
                </td>
            </tr>
        </table>
    </div> <br/>
    <div id="containerBlock2">
        <table width="100%">
            <tr>
                <td>
                    <div id="table2" style="display: flex; align: center; padding-top: 20px">
                    </div>
                </td>
                <td width="70%">
                    <div id="container2" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
                </td>
            </tr>
        </table>
    </div> <br/>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="http://code.highcharts.com/highcharts-3d.js"></script>

    <script language="JavaScript">
    var analyticsData = [];
    var appName ="trend-analyzer";
    function prepareAndSendRequest(type){
        var requestObj = {};
        requestObj.url = "https://na17.force.com/services/data/v20.0/query";
        requestObj.analysisType = (type==null)?"MM":type;
        requestObj.sessionId = "{!$Api.Session_ID}";
        fetchAnalyticsData(requestObj);
    }

    function sortByDate(a, b){
          var aDate = a.Date__c
          var bDate = b.Date__c;
          return ((aDate < bDate) ? -1 : ((aDate > bDate) ? 1 : 0));
    }

    function fetchAnalyticsData(requestObj){
        j$( "#container" ).empty();
        j$( "#logger" ).show();
        j$( "#logger" ).text( "Loading data...");
        initChart();

        j$.ajax({
            method: "POST",
            url:"https://"+appName+".herokuapp.com/trends/analysis",
            data:JSON.stringify(requestObj),
            context: document.body,
            dataType: "json",
            headers:{'Content-type':'application/json'}
        }).done(function(data) {
            if(requestObj.analysisType == 'MM'){
                analyticsData = data;
                analyticsData.sort(sortByDate);
                initChart();
            } else if(requestObj.analysisType == 'MA'){
                analyticsData = data;
                analyticsData.sort(sortByDate);
                initChart1();
            } else if(requestObj.analysisType == 'AT'){
                analyticsData = data;
                analyticsData.sort(sortByDate);
                initChart2();
            }

            j$( "#logger" ).hide();
        });
        //analyticsData = [{"attributes":{"type":"AnalyticsData__c","url":"/services/data/v20.0/sobjects/AnalyticsData__c/a1To00000016cnNEAQ"},"Id":"a1To00000016cnNEAQ","PageViews__c":87.0,"SessionCount__c":49.0,"Date__c":"2015-08-07"},{"attributes":{"type":"AnalyticsData__c","url":"/services/data/v20.0/sobjects/AnalyticsData__c/a1To00000016cnDEAQ"},"Id":"a1To00000016cnDEAQ","PageViews__c":23.0,"SessionCount__c":58.0,"Date__c":"2015-08-11"}];
        //initChart();
    }


    function initChart() {
        j$( "#table" ).html(getTableHtml(analyticsData));
        j$( "#container1" ).hide();
        j$( "#table1" ).hide();
        j$( "#container2" ).hide();
        j$( "#table2" ).hide();
        j$( "#container" ).show();
        j$( "#table" ).show();
        chart = new Highcharts.Chart({
        chart: {
                            renderTo : 'container',
            type: 'spline'
                        },
        title: {
            text: 'Page Views Vs. Session Count',
            x: -20 //center
        },
        xAxis: {
            type: 'datetime',
            dateTimeLabelFormats: { // don't display the dummy year
                month: '%b %Y'
            },
            title: {
                text: 'Date'
            }
        },
        yAxis: {
            title: {
                text: 'Page Views/Session Count'
            },
            plotLines: [{
                value: 0,
                width: 1,
                color: '#808080'
            }]
        },
            plotOptions: {
            spline: {
                marker: {
                    enabled: true
                }
            }
        },
        legend: {
            layout: 'vertical',
            align: 'right',
            verticalAlign: 'middle',
            borderWidth: 0
        },
        series: [{
            name: 'Page Views',
            data: getPageViews(analyticsData)
        }, {
            name: 'Session Count',
            data:getSessionCount(analyticsData)
        }]
    });


    }

    function initChart1() {
        j$( "#table1" ).html(getTableHtml_1(analyticsData));
         j$( "#container" ).hide();
        j$( "#table" ).hide();
        j$( "#container1" ).show();
        j$( "#table1" ).show();
        j$( "#container2" ).hide();
        j$( "#table2" ).hide();
        chart = new Highcharts.Chart({
        chart: {
                            renderTo : 'container1',
            type:'area'
                        },

        title: {
            text: '% Growth of Page Views/Session Count'
        },
        xAxis: {
            type: 'datetime',
            dateTimeLabelFormats: { // don't display the dummy year
                month: '%b %Y'
            },
            title: {
                text: 'Date'
            }
        },

        yAxis: {
            title: {
                text: '% Growth of Page Views/Session Count'
            }
        },
            plotOptions: {
            area: {
                lineColor: '#ffffff',
                lineWidth: 1,
                marker: {
                    lineWidth: 1,
                    lineColor: '#ffffff'
                }
            }
        },
        series: [{
            name: '% Growth of Page Views',
            data: getPageViews(analyticsData)
        },
                {
            name: '% Growth of Session Count',
            data: getSessionCount(analyticsData)
        }]
    });


    }

    function initChart2() {
        j$( "#table2" ).html(getTableHtml_2(analyticsData));
         j$( "#container" ).hide();
        j$( "#table" ).hide();
        j$( "#container1" ).hide();
        j$( "#table1" ).hide();
        j$( "#container2" ).show();
        j$( "#table2" ).show();
        chart = new Highcharts.Chart({
        chart: {
            renderTo : 'container2',
            zoomType: 'xy'
        },
        title: {
            text: 'Advanced Time Line'
        },
        xAxis: [{
            type: 'datetime',
            crosshair: true,
            dateTimeLabelFormats: { // don't display the dummy year
                month: '%b %Y'
            },
            title: {
                text: 'Date'
            }
        }],
        yAxis: [{
            max: 100,
            labels: {
                enabled: false
            },
            title: {
                text: ''
            },
            gridLineColor: 'rgba(0, 0, 0, 0.07)'
        }, {
            allowDecimals: false,
            max: 15,

            title: {
                text: 'Revenue'

            },
            opposite: true,
            gridLineWidth: 0
        }],
        tooltip: {
            shared: true
        },
        legend: {
            layout: 'vertical',
            align: 'left',
            x: 120,
            verticalAlign: 'top',
            y: 100,
            floating: true,
            backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'
        },
        series: [{
            name: 'Growth of Page Views',
            data: getPageViews(analyticsData)
        },
        {
            name: 'Growth of Session Count',
            data: getSessionCount(analyticsData)
        },
        {
            name: 'Revenue',
            type: 'area',
            data: getRevenues(analyticsData)
        }]
    });



    }



    function getPageViews(data){
        var dates = getCategories(data);
        var returnValue = new Array();
        for(var i=0;i<data.length;i++){
            returnValue.push([dates[i],data[i].PageViews__c]);
        }
        return returnValue;
    }

    function getSessionCount(data){
        var dates = getCategories(data);
        var returnValue = new Array();
        for(var i=0;i<data.length;i++){
            returnValue.push([dates[i],data[i].SessionCount__c]);
        }
        return returnValue;
    }

    function getNames(data){
        var dates = getCategories(data);
        var returnValue = new Array();
        for(var i=0;i<data.length;i++){
            returnValue.push([dates[i],data[i].Name]);
        }
        return returnValue;
    }

    function getRevenues(data){
        var dates = getCategories(data);
        var returnValue = new Array();
        for(var i=0;i<data.length;i++){
            returnValue.push([dates[i],data[i].Revenue__c]);
        }
        return returnValue;
    }

    function getCategories(data){
         var returnValue = new Array();
        for(var i=0;i<data.length;i++){
            var x = new Date(data[i].Date__c);
            returnValue.push(Date.UTC(x.getUTCFullYear(), x.getUTCMonth(), x.getUTCDate()));
        }
        return returnValue;
    }

    function getTableHtml(data){
        var html = "<table border='1'>";
        html+= "<tr><th>Date</th><th>Session Count</th><th>Page Views</th></tr>"
        for(var i=0;i<data.length;i++){
            html+="<tr>";
            var x = data[i].Date__c;
            html+="<td>"+x+"</td>";
            html+="<td>"+data[i].SessionCount__c+"</td>";
            html+="<td>"+data[i].PageViews__c+"</td>";
            html+="</tr>";
        }
        html+="</table>";
        return html;
     }

    function getTableHtml_1(data){
        var html = "<table border='1'>";
        html+= "<tr><th>Date</th><th>Growth (Session Count)</th><th>Growth (Page Views)</th></tr>"
        for(var i=0;i<data.length;i++){
            html+="<tr>";
            var x = data[i].Date__c;
            html+="<td>"+x+"</td>";
            html+="<td>"+data[i].SessionCount__c+"</td>";
            html+="<td>"+data[i].PageViews__c+"</td>";
            html+="</tr>";
        }
        html+="</table>";
        return html;
     }

    function getTableHtml_2(data){
        var html = "<table border='1'>";
        html+= "<tr><th>Date</th><th>Growth (Session Count)</th><th>Growth (Page Views)</th><th>Revenue</th></tr>"
        for(var i=0;i<data.length;i++){
            html+="<tr>";
            var x = data[i].Date__c;
            html+="<td>"+x+"</td>";
            html+="<td>"+data[i].SessionCount__c+"</td>";
            html+="<td>"+data[i].PageViews__c+"</td>";
            html+="<td>"+data[i].Revenue__c+"</td>"
            html+="</tr>";
        }
        html+="</table>";
        return html;
     }


    j$ = jQuery.noConflict();
    j$( document ).ajaxError(function() {
        j$( "#logger" ).show();
        j$( "#logger" ).text( "Error in reading data" );
        j$( "#container" ).empty();
    });

    prepareAndSendRequest("MM");

    </script>

</apex:page>